{
  "@context": {
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "mf": "http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#",
    "mq": "http://www.w3.org/2001/sw/DataAccess/tests/test-query#",
    "rdft": "http://www.w3.org/ns/rdftest#",
    "csvt": "http://www.w3.org/2013/csvw/tests/vocab#",
    "id": "@id",
    "type": "@type",
    "action": {
      "@id": "mf:action",
      "@type": "@id"
    },
    "approval": {
      "@id": "rdft:approval",
      "@type": "@id"
    },
    "comment": "rdfs:comment",
    "contentType": "csvt:contentType",
    "entries": {
      "@id": "mf:entries",
      "@type": "@id",
      "@container": "@list"
    },
    "httpLink": "csvt:httpLink",
    "implicit": {
      "@id": "mf:implicit",
      "@type": "@id",
      "@container": "@set"
    },
    "label": "rdfs:label",
    "metadata": {
      "@id": "csvt:metadata",
      "@type": "@id"
    },
    "minimal": "csvt:minimal",
    "name": "mf:name",
    "noProv": "csvt:noProv",
    "option": "csvt:option",
    "result": {
      "@id": "mf:result",
      "@type": "@id"
    }
  },
  "id": "manifest-nonnorm",
  "type": "mf:Manifest",
  "label": "CSV Non-Normative Tests",
  "comment": "CSV transformation and validation tests which are non-normative and not required for acceptance testing.",
  "entries": [
    {
      "id": "manifest-nonnorm#test002",
      "type": "csvt:ToJsonTest",
      "name": "Quoted field",
      "comment": "Table with one quoted field without metadata",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test002.csv",
      "result": "test002.json"
    },
    {
      "id": "manifest-nonnorm#test003",
      "type": "csvt:ToJsonTest",
      "name": "Surrounding spaces",
      "comment": "Table with whitespace before and after every field without metadata",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test003.csv",
      "result": "test003.json"
    },
    {
      "id": "manifest-nonnorm#test019",
      "type": "csvt:ToJsonTest",
      "name": "no header",
      "comment": "If a CSV+ file does not include a header line, this MUST be specified using the `header` parameter.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test019.csv",
      "result": "test019.json",
      "contentType": "text/csv;header=absent"
    },
    {
      "id": "manifest-nonnorm#test020",
      "type": "csvt:ToJsonTest",
      "name": "dialect: trim=start",
      "comment": "If `trim` is `true` or \"start\" then whitespace from the start of values that are not enclosed MUST be removed from the value.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test020-metadata.json",
      "result": "test020.json",
      "implicit": [
        "test020.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test021",
      "type": "csvt:ToJsonTest",
      "name": "dialect: trim=end",
      "comment": "If `trim` is `true` or \"end\" then whitespace from the end of values that are not enclosed MUST be removed from the value.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test021-metadata.json",
      "result": "test021.json",
      "implicit": [
        "test021.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test022",
      "type": "csvt:ToJsonTest",
      "name": "dialect: trim=true",
      "comment": "If `trim` is `true` or \"start\" then whitespace from the start of values that are not enclosed MUST be removed from the value. If `trim` is `true` or \"end\" then whitespace from the end of values that are not enclosed MUST be removed from the value.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test022-metadata.json",
      "result": "test022.json",
      "implicit": [
        "test022.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test024",
      "type": "csvt:ToJsonTest",
      "name": "dialect: header=false and headerRowCount=1",
      "comment": "If `true`, sets the `header row count` flag to 1, and if `false` to 0, unless `headerRowCount` is provided, in which case the value provided for the `header` property is ignored.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true,
        "metadata": "test024-user-metadata.json"
      },
      "action": "tree-ops.csv",
      "result": "test024.json",
      "implicit": [
        "test024-user-metadata.json"
      ]
    },
    {
      "id": "manifest-nonnorm#test025",
      "type": "csvt:ToJsonTest",
      "name": "dialect: header=false and skipRows=1",
      "comment": "Ignore header uses column definitions from metadata",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true,
        "metadata": "test025-user-metadata.json"
      },
      "action": "tree-ops.csv",
      "result": "test025.json",
      "implicit": [
        "test025-user-metadata.json"
      ]
    },
    {
      "id": "manifest-nonnorm#test050",
      "type": "csvt:ToJsonTest",
      "name": "dialect: delimiter",
      "comment": "Recognizes tab-separated-values with appropriate `delimiter`",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test050-metadata.json",
      "result": "test050.json",
      "implicit": [
        "tree-ops.tsv"
      ]
    },
    {
      "id": "manifest-nonnorm#test051",
      "type": "csvt:ToJsonTest",
      "name": "dialect: commentPrefix in header",
      "comment": "Adds comments when found in `skipRows`",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test051-metadata.json",
      "result": "test051.json",
      "implicit": [
        "test051.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test052",
      "type": "csvt:ToJsonTest",
      "name": "dialect: commentPrefix in rows",
      "comment": "Adds comments when found in `content`",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test052-metadata.json",
      "result": "test052.json",
      "implicit": [
        "test052.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test054",
      "type": "csvt:ToJsonTest",
      "name": "dialect: skipColumns",
      "comment": "Ignores skipped columns",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test054-metadata.json",
      "result": "test054.json",
      "implicit": [
        "tree-ops.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test055",
      "type": "csvt:ToJsonTest",
      "name": "dialect: skipBlankRows",
      "comment": "Ignores rows in which all columns are empty",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test055-metadata.json",
      "result": "test055.json",
      "implicit": [
        "test055.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test056",
      "type": "csvt:ToJsonTest",
      "name": "dialect: skipInitialSpace",
      "comment": "Equivalent to` trim=\"start\"`",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test056-metadata.json",
      "result": "test056.json",
      "implicit": [
        "test056.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test057",
      "type": "csvt:ToJsonTest",
      "name": "dialect as URL reference",
      "comment": "Loads a `dialect description` if referenced using a URL",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test057-metadata.json",
      "result": "test057.json",
      "implicit": [
        "test057.csv",
        "test057-dialect.json"
      ]
    },
    {
      "id": "manifest-nonnorm#test058",
      "type": "csvt:ToJsonTest",
      "name": "table dialect vs tablegroup dialect",
      "comment": "A dialect defined in a Table completely overrides that defined in a TableGroup",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test058-metadata.json",
      "result": "test058.json",
      "implicit": [
        "test058.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test091",
      "type": "csvt:NegativeValidationTest",
      "name": "same number of columns in each row",
      "comment": "each `row` MUST contain the same number of cells (although some of these cells may be empty)",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test091.csv",
      "implicit": [
        "tree-ops.csv"
      ]
    },
    {
      "id": "manifest-nonnorm#test262",
      "type": "csvt:ToJsonTest",
      "name": "dialect: trim=false",
      "comment": "If `trim` is `true` or \"start\" then whitespace from the start of values that are not enclosed MUST be removed from the value.",
      "approval": "rdft:Approved",
      "option": {
        "noProv": true
      },
      "action": "test262-metadata.json",
      "result": "test262.json",
      "implicit": [
        "test262.csv"
      ]
    }
  ]
}
