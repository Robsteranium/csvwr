# W3C CSVW Test Vocabulary
# This vocabulary defines classes an properties which extend
# the test-manifest vocabulary at <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest>.

@prefix :       <http://www.w3.org/2013/csvw/tests/vocab#> .
@prefix dc:     <http://purl.org/dc/elements/1.1/> .
@prefix csvwt:  <http://www.w3.org/2013/csvw/tests/vocab#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdft:   <http://www.w3.org/ns/rdftest#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

: dc:title         "CSVW Test Vocabulary";
  dc:creator       "Gregg Kellogg";
  dc:publisher     "W3C CSV on the Web Working Group";
  dc:description   """
    This is a vocabulary document used to define classes and properties used in
    [CSVW Test Cases](http://www.w3.org/2013/csvw/tests/) and associated test manifests.
  """;
  rdfs:comment     """
  This is a vocabulary document used to define classes and properties used in
  [CSVW Test Cases](http://www.w3.org/2013/csvw/tests/) and associated test manifests.
  """;
  dc:date          "2015-03-19";
  dc:identifier    csvwt: .

## ---- Test Case Classes ---

:Test a rdfs:Class;
  rdfs:subClassOf mf:ManifestEntry;
  rdfs:label "Superclass of all CSVW tests";
  rdfs:subClassOf rdft:Test;
  rdfs:comment """
    All CSVW tests have an input file referenced using `mf:action`. Positive
    and Negative Evaluation Tests also have a result file referenced using
    `mf:result` . Other tests may take different inputs and options as defined
    for each test class.
  """ .

:PositiveEvaluationTest a rdfs:Class;
  rdfs:label "Positive Evaluation Test";
  rdfs:subClassOf :Test;
  rdfs:comment """
    A Positive Evaluation test is successful when the result of processing the
    input file specified as `mf:action` exactly matches the output file
    specified as `mf:result` using the comparison defined in another class. The
    specifics of invoking test, including the interpretation of options and
    other input files are specified through a sub-class.
  """ .

:WarningEvaluationTest a rdfs:Class;
  rdfs:label "Warning Evaluation Test";
  rdfs:subClassOf :Test;
  rdfs:comment """
    A Warning Evaluation test is under the same criteria as PositiveEvaluationTest
    with the additional requirement that the processor generate one or more warnings after processing.
  """ .

:NegativeEvaluationTest a rdfs:Class;
  rdfs:label "Negative Evaluation Test";
  rdfs:subClassOf :Test;
  rdfs:comment """
    A Negative Evaluation test is successful when the result of processing the
    input file specified as `mf:action` results in an error or exception.
    The specifics of invoking test, including the interpretation of options
    (and other input files are specified through sub-class.
  """ .

:PositiveValidationTest a rdfs:Class;
  rdfs:subClassOf :Test;
  rdfs:label "Positive Validation Test";
  rdfs:comment """
    A `PositiveValidationTest` takes an input file(`mf:accept`) in text/csv or application/csvm+json format and validates
    it as described in the [tabular-metadata](http://w3c.github.io/csvw/metadata/) and finds no errors.
    Validation tests are not required to have an associated result, only an action.
    A Positive Validation Test is passed when a processor validates the input and finds no validation errors.
  """ .

:NegativeValidationTest a rdfs:Class;
  rdfs:subClassOf :Test;
  rdfs:label "Negative Validation Test";
  rdfs:comment """
    A `NegativeValidationTest` takes an input file(`mf:accept`) in text/csv or application/csvm+json format and validates
    it as described in the [tabular-metadata](http://w3c.github.io/csvw/metadata/) and finds no errors.
    Validation tests are not required to have an associated result, only an action.
    A Negative Validation Test is passed when a processor validates the input and finds one or more errors.
  """ .

:WarningValidationTest a rdfs:Class;
  rdfs:subClassOf :Test;
  rdfs:label "Warning Validation Test";
  rdfs:comment """
    A `WarningValidationTest` takes an input file(`mf:accept`) in text/csv or
    application/csvm+json format and validates it as described in the
    [tabular-metadata](http://w3c.github.io/csvw/metadata/) and finds
    warnings, but no errors. Validation tests are not required to have an
    associated result, only an action. A Warning Validation Test is passed
    when a processor validates the input, generates one or more warnings, and
    finds no validation errors.
  """ .

:ToRdfTest a rdfs:Class;
  rdfs:label "To RDF Test";
  rdfs:subClassOf :PositiveEvaluationTest, rdft:TestEval;
  rdfs:comment """
    A `ToRdfTest` takes an input file (`mf:accept`) in text/csv or application/csvm+json format to produce
    a an RDF graph which is [isomorphic](http://www.w3.org/TR/rdf11-concepts/#graph-isomorphism) to the graph generated from the result file (`mf:result`)
    (see [RDF-CONCEPTS](http://www.w3.org/TR/rdf11-concepts/)). The test entry MAY use `:implicit` files, have user-specified `:metadata`,
    and have a `:httpLink` header defining a `describedBy` relationship. Test Processors SHOULD
    act as if the file referenced via `mf:action` is returned using such a link header if it
    is not included in the HTTP response.
  """ .

:ToRdfTestWithWarnings a rdfs:Class;
  rdfs:label "To RDF Test with warnings";
  rdfs:subClassOf :WarningEvaluationTest, rdft:TestEval;
  rdfs:comment """
    Equivalent to ToRdfTest with the additional expectation that the processor emit one or more warnings.
  """ .

:ToJsonTest a rdfs:Class;
  rdfs:label "To JSON Test";
  rdfs:subClassOf :PositiveEvaluationTest;
  rdfs:comment """
    A `CsvToJsonTest` takes an input file (`mf:accept`) in text/csv or application/csvm+json format to
    produce a an JSON file. The test entry MAY use `:implicit` files, have
    user-specified `:metadata`, and have a `:httpLink` header defining a
    `describedBy` relationship. Test Processors SHOULD act as if the file
    referenced via `mf:action` is returned using such a link header if it is
    not included in the HTTP response. The expected results are compared using
    JSON object comparison with the processor output.
  """ .

:ToJsonTestWithWarnings a rdfs:Class;
  rdfs:label "To JSON Test with warnings";
  rdfs:subClassOf :WarningEvaluationTest, rdft:TestEval;
  rdfs:comment """
    Equivalent to ToJsonTest with the additional expectation that the processor emit one or more warnings.
  """ .

:NegativeRdfTest a rdfs:Class;
  rdfs:label "Negative RDF Test";
  rdfs:subClassOf :NegativeEvaluationTest, rdft:TestEval;
  rdfs:comment """
    An error or exception should be generated when trying to generate RDF.
  """ .

:NegativeJsonTest a rdfs:Class;
  rdfs:label "Negative JSON Test";
  rdfs:subClassOf :NegativeEvaluationTest, rdft:TestEval;
  rdfs:comment """
    An error or exception should be generated when trying to generate JSON.
  """ .

:Option a rdfs:Class;
  rdfs:label "Processor Options";
  rdfs:comment "Options passed to the test runner to affect invocation of the appropriate API method." .

:noProv a rdf:Property;
  rdfs:label "No Provenance";
  rdfs:comment "Processor should run without generating optional provenance information.";
  rdfs:domain :Option;
  rdfs:range xsd:boolean .

:minimal a rdf:Property;
  rdfs:label "Minimal";
  rdfs:comment "Generate minimal vs. standard output.";
  rdfs:domain :Option;
  rdfs:range xsd:boolean .

:metadata a rdf:Property;
  rdfs:label "Metadata";
  rdfs:comment "URL of User supplied metadata.";
  rdfs:domain :Option;
  rdfs:range xsd:anyUri .

## ---- Property declarations for each test ----

:implicit a rdf:Property;
  rdfs:label "implicit";
  rdfs:comment "Implicit input files";
  rdfs:domain	 :Test;
  rdfs:range   rdfs:Resource .

:option a rdf:Property;
  rdfs:label "option";
  rdfs:comment "Options affecting processing";
  rdfs:domain	 :Test;
  rdfs:range   :Option .

:base a rdf:Property;
  rdfs:label "base";
  rdfs:comment """
    The base IRI to use when expanding or compacting the document.
    If set, this overrides the input document's IRI.
  """;
  rdfs:domain	 :Test;
  rdfs:range   rdfs:Resource .

:contentType a rdf:Property;
  rdfs:label "content type";
  rdfs:comment "The HTTP Content-Type used for the input file, in case it is a non-registered type.";
  rdfs:domain	 :Test;
  rdfs:range   xsd:boolean .

:redirectTo a rdf:Property;
  rdfs:label "redirect to";
  rdfs:comment """
    The location of a URL for redirection. A request made of the input file must be redirected
    to the designated URL.
    """;
  rdfs:domain	 :Test;
  rdfs:range   xsd:boolean .

:httpStatus a rdf:Property;
  rdfs:label "HTTP status";
  rdfs:comment """
    The HTTP status code that must be returned when the input file is requested. This
    is typically used along with the `redirectTo` property.
    """;
  rdfs:domain	 :Test;
  rdfs:range   xsd:boolean .

:httpLink a rdf:Property;
  rdfs:label "HTTP link";
  rdfs:comment "An HTTP Link header to be added to the result of requesting the input file.";
  rdfs:domain	 :Test;
  rdfs:range   xsd:boolean .
